{"name":"Selectjs","tagline":"A javascript library to map and transfrom json object/arrays","body":"selectjs\r\n========\r\n\r\nA javascript library to map json objects/arrays.\r\n\r\nUsing this you can do the following transformations on a json object/array:\r\n\r\n => select only some properties.\r\n \r\n => select all but some properties.\r\n\r\n => rename properties.\r\n\r\n => transform individual properties\r\n\r\n => do the above operations on an array.\r\n\r\n\r\n\r\nDependencies:\r\n------------\r\nunderscore.js\r\n\r\n\r\n\r\nInstalling\r\n----------\r\ninclude the dependencies and the file select.js in the page you want to use.\r\n\r\n\r\nUsing\r\n-----\r\n\r\nselect(input,options)\r\n\r\nExamples\r\n\r\nRename object keys\r\n```javascript\r\n var input = {x:1,y:2,z:3};\r\n var output = select(input,{rename:{x:'a',y:'b',z:'c'}}); //output is  {a:1,b:2,c:3}\r\n````\r\n\r\nSelect only some keys from object\r\n```javascript\r\nvar input = {x:1,y:2,z:3};\r\nvar output = select(input,{only:[\"y\",\"z\"]}); // output is {y:2,z:3}\r\n````\r\n\r\nSelect some keys and rename\r\n```javascript\r\n var input = {x:1,y:2,z:3};\r\n var output = select(input,{only:[\"y\"],rename:{y:\"b\"} }); //output is  {b:2}\r\n```\r\n\r\nSelect all keys except some\r\n```javascript\r\n var input = {x:1,y:2,z:3};\r\n var output  = select(input,{except:[\"y\"]});//output is  {x:1,z:3}\r\n```\r\n\r\nSelect all keys except some and rename\r\n```javascript\r\n var input = {x:1,y:2,z:3};\r\n var output  = select(input,{except:[\"y\"],rename:{x:\"a\",z:\"c\"} });//output is  {b:1,c:3}\r\n```\r\n\r\nAdd new key(s) value of which is based on other keys\r\n```javascript         \r\n var input = {x:1,y:2,z:3};\r\n var output = select(input,{only:[],\r\n            methods:{sum:function(input){ \r\n                            var sum = input.x + input.y + input.z;\r\n                            var avg = sum/3.0;\r\n                            return {sum:sum,avg:avg}\r\n           } \r\n                        }\r\n    });\r\n  //output is {sum:6,avg:2}\r\n```\r\n\r\n\r\nIf the input object is an array of objects, then the transformation is applied to all the objects\r\n```javascript\r\n  var comments = [{id:\"1\",postText:\"hello\",partyId:12},{id:\"2\",postText:\"hello2\",partyId:2}]\r\n  var output = select(comments,{only:[\"postText\",\"partyId\"], rename:{\"postText\":\"text\",partyId:\"creatorId\"}});\r\n  //output is [{id:\"1\", text:\"hello\",creatorId:12},{id:\"2\",text:\"hello2\",creatorId:2}]    \r\n```\r\n\r\nTo transform embedded objects\r\n```javascript\r\nvar input = {x:1,comments:[{id:\"1\",postText:\"hello\",partyId:12},{id:\"2\",postText:\"hello2\",partyId:2}]};\r\n\r\nvar output = select(input,{only:[\"comments\"],properties:{\"comments\":{\r\n only:[\"postText\",\"partyId\"], rename:{\"postText\":\"text\",partyId:\"creatorId\"}\r\n}\r\n},\r\ntransform:function(res){ return res.comments}\r\n});\r\n//output is {comments:[{text:'hello', creatorId:12},{text:'hello2', creatorId:12}]} \r\n```\r\n\r\n\r\n\r\n\r\nDocumentation\r\n-----\r\nselect(input,options)\r\n\r\ninput can be any object/basic data type, array. if it is an array, the mapping will be applied to each data.\r\n\r\noptions: it can be a function or a object\r\nif it is a function then it takes the input as the argument and output is the return value of the function. If the input is an array then the function is called for each input element.\r\n\r\nif the input is an array then the function is executed for each element of the array. and the output array is returned.\r\n\r\noptions can be an object with following options\r\nonly: array of fields to select only\r\n\r\nexcept: array of fields to be excluded. At a time only one of the options \"only\" or \"except\" should be used\r\n\r\nrename: object of key value pair, with key as current name, property as new name\r\nproperty specific tranformation: can replace the array syntax,and methods for simple \r\n\r\nproperties\r\n\r\ncomments:mapper, // does select(comments,mapper)\r\n\r\ncomments:function(){}, // does manipulation on the value of comments, if comments is an array will apply on each value.   \r\n\r\nmethods: array of methods which return a key value pair which is merged into result\r\narray: input property, output property or only property(no rename), mapper: to map each element\r\n\r\ntransform: passes the result to transform function which transforms the result(obtained after applying all options) and returns the final result\r\n\r\npending: \r\npipes: temp(transform)\r\n   \r\n   \r\n\r\n","google":"UA-43262398-1","note":"Don't delete this file! It's used internally to help with page regeneration."}